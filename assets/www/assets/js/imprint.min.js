/*!
 * IMPRINT Gocin 0.02.15.1
 * Copyright 2015 Nur Maulidiyah.
 * Nur.Maulidiyah20@yahoo.co.id
 */
 
function init(i_isunreg, i_isreg, i_islogin, i_isgeo){
	
	//unregister GCM
	if(i_isunreg == true)
		isunreg = true;
	else
		isunreg = false;
	
	//register GCM	
	if(i_isreg == true)
		isreg = true;
	else
		isreg = false;
	
	//login aplikasi	
	if(i_islogin == true)
		islogin = true;
	else
		islogin = false;
		
	//geo location
	if(i_isgeo == true)
		isgeoloc = true;
	else
		isgeoloc = false;
	
	document.addEventListener("deviceready",onDeviceReady,false);
	
}

function onDeviceReady() {
	
	document.addEventListener("backbutton", onBackButton, false);
	
	pictureSource=navigator.camera.PictureSourceType;
	destinationType=navigator.camera.DestinationType;
	
	if(isgeoloc)
		navigator.geolocation.getCurrentPosition(onGeoSuccess, onError);
	
	pushNotification = window.plugins.pushNotification;
	pushNotiftoDevice(SenderID, isunreg, isreg);
}

function onGeoSuccess(position){
	longitude 	= position.coords.latitude;
	latitude	= position.coords.longitude;
}

function onError(error) {
	alert('code: '    + error.code    + '\n' +
			'message: ' + error.message + '\n');
}

function onBackButton(e) {
	var current = document.URL;
		current = current.split('/');
		current = current[(current.length - 1)];
	
	e.preventDefault();
	if(current == 'home.html'){
		var conf = confirm("Ingin menutup aplikasi ? ");
		if(conf){
			 navigator.app.exitApp();
		}
	}
	else{
		navigator.app.backHistory();
	}
}

function pushNotiftoDevice(SenderID, i_isunreg, i_isreg){
	try 
	{ 
		if(i_isunreg){
			pushNotification.unregister(successHandler, errorHandler);
		}if(i_isreg)
			pushNotification.register(successHandler, errorHandler, {"senderID":SenderID,"ecb":"onNotification"});
	}
	catch(err) 
	{ 
		txt="There was an error on this page.\n\n"; 
		txt+="Error description: " + err.message + "\n\n"; 
		alert(txt); 
	}
}

function onNotification(e) {
	switch( e.event )
	{
		case 'registered':
			if ( e.regid.length > 0 )
			{
				RegID =  e.regid;
				if(islogin){
					window.localStorage.setItem("regid", RegID);
					$("#btn-masuk").text("Otentikasi pengguna..");
					login(e.regid);
				}
			}
			break;
		case 'message':
			if (e.foreground)
			{
				var my_media = new Media("../assets/sound/notif.mp3");
				my_media.play();
			}
			else
			{	if (e.coldstart)
					alert("coldstart");
				else
					alert("else");
			}
			break;
		case 'error':
			alert('ERROR -> MSG:' + e.msg);
			break;
		default:
			alert('EVENT -> Unknown, an event was received and we do not know what it is');
			break;
	}
}

function successHandler (result) {
	$("#btn-masuk").text(" Mendaftarkan perangkat...");
}

function errorHandler (error) {
	showWrong(error);
}

/* CAMERA AND FEAT */
function getPhoto(source) {
	// Retrieve image file location from specified source
	navigator.camera.getPicture(onPhotoURISuccess, onFail, { quality: 100, 
		destinationType: navigator.camera.DestinationType.FILE_URI,
		sourceType: source ,
		saveToPhotoAlbum: true,
		allowEdit: true, 
		targetWidth: 400,
		targetHeight: 400,
		correctOrientation: true
	});
}

function capturePhotoEdit() {
	// Take picture using device camera, allow edit, and retrieve image as base64-encoded string  
	navigator.camera.getPicture(onPhotoDataSuccess, onFail, { 
		quality: 100, 
		saveToPhotoAlbum: true,
		allowEdit: true,
		destinationType: navigator.camera.DestinationType.FILE_URI ,
		targetWidth: 400,
		targetHeight: 400,
		correctOrientation: true
	});
}


function onPhotoURISuccess(imageURI) {
	transferPhoto(imageURI);
}

function onFail(message) {
	$(".user-pic").attr('src','../assets/images/'+file);
}

function onPhotoDataSuccess(imageURI) {
	transferPhoto(imageURI);
}

function transferPhoto(imageURI){
	$(".modal").hide();
	$("#photo-progress").html('<img src="../assets/images/ajax-loader(2).gif"/>');
	
	var user 	= window.localStorage.getItem("user");
				  user = JSON.parse(user);
	var regid	= window.localStorage.getItem("regid");//regid
	
	var server 	= ws_host+'?f=updatephoto&p[0]='+user['token']+'&p[1]='+user['userid']+'&p[2]='+regid;
	
	if (server) {
		
		// Specify transfer options
		var options 		= new FileUploadOptions();
		options.fileKey		= "file";
		options.fileName	= imageURI.substr(imageURI.lastIndexOf('/')+1);
		options.mimeType	= "image/jpg";
		options.chunkedMode = false;
		
		// Transfer picture to server
		var ft = new FileTransfer();
		
		ft.upload(imageURI, server, 
			function(message) {
				var data = message['response'];
			
				if(data[2] == 2)
					goOut();
				else if (data[2] == 0){
					
					$("#photo-progress").html('<i class="typcn typcn-camera-outline"></i>');
					$(".user-pic").attr('src',imageURI);
					
					window.localStorage.setItem("url-foto", imageURI);
				}
				else
					onFail(data);
			}, 
			function(error) {
				onFail(error);
			}, 
			options,true);
	}
}



/* END Camera Handler */

// pengecekan field required
function cekRequired(csv){
	var arr_elem = csv.split(',');
	var pass = true;
	
	for(var i in arr_elem){
		if($("#"+arr_elem[i]).val().length == 0 ){
			elemErr($("#"+arr_elem[i]));
			pass = false;
		}
	}
	
	return pass;
}

function elemErr(elem){
	elem.addClass('err');
	elem.focus(function(){
		elem.removeClass('err');
	});
}

//pengecekan kolom dengan format angka saja
function onlyNumber(elem) {
	var val = $(elem).val();
		val = val.split('');
	var numeric = [1,2,3,4,5,6,7,8,9,0];
	var pass = true;
	
	for(var i in val){
		var x = $.inArray(parseInt(val[i]),numeric);
		if( parseInt(x) < parseInt(0)){
			pass = false;
			break;
		}
	}
	
	return pass;
}

//parsing error per status
function setErrorText(xhr, error){
	var text = '';
	var err = 0;
	if (xhr.status === 0) {
		text = 'Tidak dapat terhubung. Periksa koneksi internet Anda.';
		err = 1;
	} else if (xhr.status == 404) {
		text = 'Data yang ada minta tidak tersedia. [404]';
		err = 1;
	} else if (xhr.status == 500) {
		text = 'Kesalahan internal server [500].';
		err = 1;
	} else if (error === 'parsererror') {
		text = 'Parsing data gagal.';
	} else if (error === 'timeout') {
		text = 'Waktu habis.';
		err = 1;
	} else if (error === 'abort') {
		text = 'Permintaan digagalkan oleh user.';
		err = 1;
	}
	
	var array = [];
	array[0] = err;
	array[1] = text;
	
	return array;
}

//logout aplikasi ditaruh luar karena digunakan di semua tempat
function goOut(){
	var user = window.localStorage.getItem("user");
		user = JSON.parse(user);
		
	var param 	= new Array();
	param[0]	= user['userid'];//userid
	
	var xhjr	= $.ajax({
					data		: { f: 'logout', p: param },
					dataType	: 'jsonp',
					jsonp		: false,
					url			: ws_host+"?callback=cbLogout",
					timeout		: ws_timeout
				});
	
	xhjr.error(function(xhr,status){
		var arr_err = setErrorText(xhr, status);
		
		if(arr_err[0] == 1)
			alert(arr_err[1]);
	});
}

function cbLogout(data){
	if(data[0] === 1)
		alert(data[1]);
	else{
		//hapus local storage
		window.localStorage.removeItem("user");
		//unregister perangkat
		init(true);
		
		location.href = "login.html";
	}
}

/* AMBIL JENIS PELAYANAN */
function getJenisPelayanan(elem, param, value){
	calling();
	
	function calling(){
		var self = this;
			
		var xhjr	= $.ajax({
						data			: { f: 'listjenispelayanan', p: param },
						dataType		: 'jsonp',
						jsonpCallback	: "cbJenisPelayanan",
						url				: ws_host,
						timeout			: ws_timeout
					});
		xhjr.success(function(data){
			self.cbJenisPelayanan(data, elem, value);
		})
		xhjr.error(function(xhr,status){
			var arr_err = setErrorText(xhr, status);
			
			if(arr_err[0] == 1)
				alert(arr_err[1]);
		});
	}
}

function cbJenisPelayanan(data, elem, value){
	if(typeof elem != 'undefined' && data[0] == 0){
		var jenis = data[2];
		
		elem 	= elem.split(',');
		if(typeof value == 'undefined' || value == null)
			value 	= '';
		value 	= value.split(',');
		for(var i in elem){
			createHTMLJenis(jenis, elem[i], value[i]);
		}
	}
	else if(data[0] == 1 || data[0] == 2)
		goOut();
}

function createHTMLJenis(data, elem, val){
	var html = '';
	
	for(var i in data){
		html	+= '<option value="'+data[i]['idjenis']+'" ';
		
		if(typeof val != 'undefined' && val != null && data[i]['idjenis'] == val)
			html += 'selected';
		
		html	+= ' >'+data[i]['namajenis']+'</option>';
	}
	
	$(elem).html(html);
	$(elem).selectpicker('refresh');	
}
/* END JENIS PELAYANAN */


/* html khusus rating */
function htmlRating(rating){
	var full	= parseInt(rating);
	var half	= false;
	if(parseFloat(rating) > parseFloat(full) && parseFloat(rating) < parseFloat(full+1))
		half 	= true;
	var sisa	= 5 - parseInt(full);
	if(half)
		sisa	= parseInt(sisa) - 1;
	
	var html 	= '';
	for(var i = 1; i <= full; i++){
		html	+= '<i class="typcn typcn-heart-full-outline"></i>';
	}
	if(half)
		html	+= '<i class="typcn typcn-heart-half-outline"></i>';
	for(var i = 1; i <= sisa; i++){
		html	+= '<i class="typcn typcn-heart-outline"></i>';
	}
	
	return html;	
}

function days(){
	var days = ['','Senin','Selasa','Rabu','Kamis','Jumat','Sabtu','Minggu'];
	return days;
}

function getDay(noday){
	var day = days();
	return day[noday];
}

function getUrlParameter(){
    var sPageURL = window.location.search.substring(1);
	var sURLVariables = sPageURL.split('&');
	
	var param = {};
    for (var i in sURLVariables) 
    {
		var sParameter = sURLVariables[i].split('=');
		if(typeof sParameter[1] != 'undefined' && sParameter != null)
			param[sParameter[0]] = sParameter[1].replace(/%20/gi,' ');
		else
			param[sParameter[0]] = sParameter[1];
    }
	return param;
}

function setToUrlParameter(dt, csv){
	var field = csv.split(',');
	
	var param = [];
	for(var i in dt){
		if($.inArray(i,field) >= 0)
			param.push(i+'='+dt[i]);
	}
	
	return param.join('&');		
}